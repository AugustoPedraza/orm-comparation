<?xml version="1.0" encoding="utf-8" ?>

<sqlMap namespace="OperationMap"
				xmlns="http://ibatis.apache.org/mapping"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <resultMaps>
    <resultMap id="OperationResult" class="Operation">
      <constructor>
        <argument argumentName="id" column="ID"/>
        <argument argumentName="operationType" column="OPERATION_TYPE"/>
        <argument argumentName="status" column="STATUS"/>
        <argument argumentName="environmentId" column="ENVIRONMENT_ID"/>
        <argument argumentName="serverName" column="SERVER_NAME"/>
        <argument argumentName="postedBy" column="POSTED_BY"/>
        <argument argumentName="postedOn" column="POSTED_ON"/>
        <argument argumentName="executedOn" column="EXECUTED_ON"/>
        <argument argumentName="completedOn" column="COMPLETED_ON"/>
      </constructor>
    </resultMap>

    <resultMap id="OperationStepResult" class="OperationStep">
      <constructor>
        <argument argumentName="id" column="ID"/>
        <argument argumentName="operationId" column="OPERATION_ID"/>
        <argument argumentName="exitMessage" column="EXIT_MESSAGE"/>
        <argument argumentName="status" column="STATUS"/>
        <argument argumentName="order" column="STEP_ORDER"/>
        <argument argumentName="workerType" column="WORKER_TYPE"/>
        <argument argumentName="workerUtility" column="WORKER_UTILITY"/>
        <argument argumentName="workerMethod" column="WORKER_METHOD"/>
        <argument argumentName="parameters" column="PARAMETERS"/>
        <argument argumentName="prerequisiteSteps" column="PREREQUISITE_STEPS"/>
        <argument argumentName="executedOn" column="EXECUTED_ON"/>
        <argument argumentName="completedOn" column="COMPLETED_ON"/>
      </constructor>
    </resultMap>

  </resultMaps>

  <statements>
    <sql id="SelectOperationColumns">
      SELECT oo.ID, oo.OPERATION_TYPE, oo.STATUS, oo.ENVIRONMENT_ID, oo.SERVER_NAME, oo.POSTED_BY,
      oo.POSTED_ON, oo.EXECUTED_ON, oo.COMPLETED_ON
      FROM oasis_operations oo 
    </sql>

    <sql id="SelectOperationStepColumns">
      SELECT oos.ID, oos.OPERATION_ID, oos.EXIT_MESSAGE, oos.STATUS, oos.STEP_ORDER, oos.WORKER_TYPE, oos.WORKER_UTILITY, oos.WORKER_METHOD,
      oos.PARAMETERS, oos.PREREQUISITE_STEPS, oos.EXECUTED_ON, oos.COMPLETED_ON
      FROM oasis_operation_steps oos
    </sql>


    <select id="FindAllOperations" resultMap="OperationResult" parameterClass="string">
      <include refid="SelectOperationColumns"/>
      WHERE oo.STATUS = #status#
    </select>

    <select id="FindOperationsByServername" resultMap="OperationResult" parameterClass="string">
      <include refid="SelectOperationColumns"/>
      WHERE oo.SERVER_NAME = #serverName#
    </select>

    <select id="FindStepsByOperationId" resultMap="OperationStepResult" parameterClass="int">
      <include refid="SelectOperationStepColumns"/>
      WHERE oos.OPERATION_ID = #id#
    </select>

    <select id="FindOperationById" resultMap="OperationResult" parameterClass="int">
      <include refid="SelectOperationColumns"/>
      WHERE ID = #id#
    </select>

    <select id="FindOperationsByStatus" resultMap="OperationResult" parameterClass="int">
      <include refid="SelectOperationColumns"/>
      WHERE STATUS = #status#
    </select>

    <select id="FindStartedWorkers" resultMap="OperationStepResult" parameterClass="string">
      <include refid="SelectOperationStepColumns"/>
      INNER JOIN oasis_operations oo ON oo.id = oos.operation_id
      WHERE oo.status = 1 and oo.server_name = #serverName# and oos.status = 1
    </select>

    <select id="FindPendingWorkers" resultMap="OperationStepResult" parameterClass="string">
      <include refid="SelectOperationStepColumns"/>
      INNER JOIN oasis_operations oo ON oo.id = oos.operation_id
      WHERE oo.status = 1 and oo.server_name = #serverName# and oos.status = 1
    </select>


    <insert id="AddOperation" parameterMap="AddOperationParameterMap">
      INSERT INTO oasis_operations(OPERATION_TYPE, STATUS, SERVER_NAME, POSTED_BY, POSTED_ON)
      VALUES (:operationType, :status, :serverName, :postedBy, :postedOn)
    </insert>

    <insert id="AddOperationStep" parameterClass="OperationStep">
      INSERT INTO oasis_operation_steps(OPERATION_ID, EXIT_MESSAGE, STATUS, STEP_ORDER, WORKER_TYPE, WORKER_UTILITY, WORKER_METHOD,
      PARAMETERS, PREREQUISITE_STEPS, EXECUTED_ON, COMPLETED_ON)
      VALUES (#OperationId#, #ExitMessage#, #Status#, #Order#, #WorkerType#, #WorkerUtility#, #WorkerMethod#, #Parameters#, #PrerequisiteSteps#, #ExecutedOn#, #CompletedOn#)
    </insert>


    <update id="SaveOperation" parameterClass="Operation">
      UPDATE oasis_operations
      SET SERVER_NAME = #ServerName#, STATUS = #Status#, EXECUTED_ON = #ExecutedOn#, COMPLETED_ON = #CompletedOn#
      WHERE ID = #Id#
    </update>

    <update id="SaveOperationStep" parameterClass="OperationStep">
      UPDATE oasis_operation_steps
      SET EXIT_MESSAGE = #ExitMessage#, STATUS = #Status#, EXECUTED_ON = #ExecutedOn#, COMPLETED_ON = #CompletedOn#
      WHERE ID = #Id#
    </update>


    <delete id="DeleteOperation" parameterClass="int">
      DELETE FROM oasis_operations
      WHERE ID = #id#
    </delete>

    <delete id="DeleteStepsByOperationId" parameterClass="int">
      DELETE FROM oasis_operation_steps
      WHERE OPERATION_ID = #id#
    </delete>

  </statements>

  <parameterMaps>
    <parameterMap id="AddOperationParameterMap" class="Operation">
      <parameter property="OperationType"/>
      <parameter property="Status"/>
      <parameter property="ServerName"/>
      <parameter property="PostedBy"/>
      <parameter property="PostedOn"/>
    </parameterMap>
  </parameterMaps>

</sqlMap>